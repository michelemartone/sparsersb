
 -- Loadable Function: S = sparsersb (A)
     Create a sparse RSB matrix from the full matrix A.

 -- Loadable Function: [S, NROWS, NCOLS, NNZ, REPINFO, FIELD, SYMMETRY]
= sparsersb (MTXFILENAME, MTXTYPESTRING)
     Create a sparse RSB matrix by loading the Matrix Market matrix
     file named MTXFILENAME. The optional argument MTXTYPESTRING can
     specify either real ("D") or complex ("Z") type. Default is real.
     In the case MTXFILENAME is "?", a string listing the available
     numerical types with BLAS-style characters will be returned. If
     the file turns out to contain a Matrix Market vector, this will be
     loaded as such.

 -- Loadable Function: sparsersb (A,"save",MTXFILENAME)
     Saves a sparse RSB matrix as a Matrix Market matrix file named
     MTXFILENAME.

 -- Loadable Function: S = sparsersb (I, J, SV, M, N, NZMAX)
     Create a sparse RSB matrix given integer index vectors I and J, a
     1-by-`nnz' vector of real of complex values SV, overall dimensions
     M and N of the sparse matrix.  The argument `nzmax' is ignored but
     accepted for compatibility with MATLAB.

     *Note*: if multiple values are specified with the same I, J
     indices, the corresponding values in S will be added.

     The following are all equivalent:

          s = sparsersb (i, j, s, m, n)
          s = sparsersb (i, j, s, m, n, "summation")
          s = sparsersb (i, j, s, m, n, "sum")

 -- Loadable Function: S = sparsersb (I, J, S, M, N, "unique")
     Same as above, except that if more than two values are specified
     for the same I, J indices, the last specified value will be used.

 -- Loadable Function: S = sparsersb (I, J, SV)
     Uses `M = max (I)', `N = max (J)'

 -- Loadable Function: S = sparsersb (M, N)
     If M and N are integers, equivalent to `sparsersb ([], [], [], M,
     N, 0)'

 -- Loadable Function: S = sparsersb ("set", OPN, OPV)
     If OPN is a string representing a valid librsb option name and OPV
     is a string representing a valid librsb option value, the
     correspondent librsb option will be set to that value.

 -- Loadable Function: S = sparsersb (A, "get", MIF)
     If MIF is a string specifying a valid librsb matrix info string
     (valid for librsb's rsb_mtx_get_info_from_string()), then the
     correspondent value will be returned for matrix A. If MIF is the
     an empty string (""), matrix structure information will be
     returned.

 -- Loadable Function: S = sparsersb (A, S)
     If A is a sparsersb matrix and S is a string, S will be
     interpreted as a query string about matrix A.

 -- Loadable Function: S = sparsersb (A,"render", FILENAME[, RWIDTH,
          RHEIGHT])
     If A is a sparsersb matrix and FILENAME is a string, A will be
     rendered as an Encapsulated Postcript file FILENAME. Optionally,
     width and height can be specified. Defaults are 512.

 -- Loadable Function: [O =] sparsersb (A,"autotune"[, TRANSA, NRHS,
          MAXR, TMAX, TN, SF])
     If A is a sparsersb matrix, autotuning of the matrix will take
     place, with SpMV and autotuning parameters. After the "autotune"
     string, the remaining parameters are optional. If giving an output
     argument O, that will be assigned to the autotuned matrix, and the
     input one A will remain unchanged.

     Please note that on `sparsersb' type variables are available most,
     but not all of the operators available for `full' or `sparse'
     typed variables.

     See also: full, sparse



Additional help for built-in functions and operators is
available in the on-line version of the manual.  Use the command
`doc <topic>' to search the manual index.

Help and information about Octave is also available on the WWW
at http://www.octave.org and via the help@octave.org
mailing list.
